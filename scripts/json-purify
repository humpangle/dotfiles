#!/usr/bin/env python3

import re
import argparse


def json_purifier(input_path, inline=False):
    if inline:
        output_path = input_path
    else:
        output_path = re.sub(r"\.json$", "", input_path) + "-0j.json"

    with open(input_path, "r", encoding="utf-8") as infile:
        lines = infile.readlines()

    cleaned_lines = []

    # Remove `//` comment lines and strip trailing commas
    for line in lines:
        stripped = line.strip()

        # Remove full-line `//` comments
        if stripped.startswith("//"):
            continue

        # Remove trailing commas if the next non-empty line starts with ] or }
        cleaned_lines.append(line)

    # Join back into a single string for trailing comma fix
    content = "".join(cleaned_lines)

    # Remove trailing commas before a closing } or ]
    content = re.sub(r",(\s*[}\]])", r"\1", content)

    with open(output_path, "w", encoding="utf-8") as outfile:
        outfile.write(content)

    print(output_path, end=None)


def main():
    parser = argparse.ArgumentParser(
        description="Clean JSON files by removing comments and trailing commas"
    )
    parser.add_argument("json_file", help="Path to the JSON file to purify")
    parser.add_argument(
        "-i",
        "--inline",
        action="store_true",
        help="Modify the file in-place instead of creating a new file",
    )

    args = parser.parse_args()
    json_purifier(args.json_file, inline=args.inline)


if __name__ == "__main__":
    main()
