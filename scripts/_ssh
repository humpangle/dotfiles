#!/usr/bin/env bash

usage() {
  echo "Usage: $0 [-c] [-s] [-t] [-d] [-n]"
  echo "  -c  Add __COPY_PROGRAM__=clip"
  echo "  -s  Add ___EBNIS_SMALL_SCREEN___=1"
  echo "  -t  Add EBNIS_VIM_THEME=darkblue"
  echo "  -d  Delete SSH block from ~/.bashrc"
  echo "  -n  Preview SSH block without writing to ~/.bashrc"
  exit 1
}

append_ssh_block() {
  local block="# -----------------------------------------------------------------------------
# SSH
# -----------------------------------------------------------------------------"

  [[ $include_copy == 1 ]] && block+="
export __COPY_PROGRAM__=clip"

  [[ $include_small == 1 ]] && block+="
export ___EBNIS_SMALL_SCREEN___=1"

  [[ $include_theme == 1 ]] && block+="
export EBNIS_VIM_THEME=darkblue"

  block+="
# -----------------------------------------------------------------------------
# /END/ SSH
# -----------------------------------------------------------------------------"

  if [[ $dry_run -eq 1 ]]; then
    echo
    echo "================== DRY RUN =================="
    echo "$block"
    echo "================== DRY RUN =================="
  else
    delete_ssh_block # Remove existing block first
    echo -e "\n$block" >>~/.bashrc
    echo "SSH block appended to ~/.bashrc"
  fi
}

delete_ssh_block() {
  sed -i '/# -----------------------------------------------------------------------------/{
    N
    /# SSH/{
      :a
      N
      /# \/END\/ SSH/!ba
      N
      /# -----------------------------------------------------------------------------/!ba
      d
    }
  }' ~/.bashrc
  echo "SSH block removed from ~/.bashrc"
}

# Parse options
include_copy=0
include_small=0
include_theme=0
dry_run=0

while getopts ":cstdn" opt; do
  case $opt in
  c)
    include_copy=1
    ;;
  s)
    include_small=1
    ;;
  t)
    include_theme=1
    ;;
  d)
    delete_ssh_block
    exit 0
    ;;
  n)
    dry_run=1
    ;;
  *)
    usage
    ;;
  esac
done

if [[ $include_copy -eq 1 || $include_small -eq 1 || $include_theme -eq 1 ]]; then
  append_ssh_block
  exit 0
fi

usage
