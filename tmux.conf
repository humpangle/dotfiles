# set-option -g default-shell /usr/bin/fish
set -g window-status-current-style "underscore"
# Some tweaks to the status line
set -g status-right "%F %H:%M"
# set -g status-right "%d %H:%M"
# from neovim
set-option -sg escape-time 10
# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"
# Change the default $TERM to tmux-256color
set -g default-terminal "tmux-256color"
set-option -g focus-events on

# Change the prefix key to c-a
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

# set -g status-bg red
# set -g status-fg white

# Drag to re-order windows
bind-key -n MouseDrag1Status swap-window -t=

# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window

set-window-option -g mode-keys vi # use vim keybindings

# No bells at all
set -g bell-action none

# Keep windows around after they exit
set -g remain-on-exit on

set-option -g renumber-windows on

# Let pane numbering start from 1
set-option -g pane-base-index 1

# Add a bit more scroll history in the buffer.
set -g history-limit 50000

#    DOES NOT WORK
# If not empty, a file to which tmux will write command prompt history on exit
# and load it from on start.
# set -g history-file "#(echo $HOME)/#{session_name}--#{window_index}-#{pane_index}"

# Allow opening multiple terminals to view the same session at different sizes.
setw -g aggressive-resize on

# Various colors (settings using wrong syntax except active pane border?).
set -g status-style fg=colour244
set -g window-status-current-style fg=colour222
set -g pane-border-style fg=colour240
# Set the pane border colour for the currently active pane.
set-option -g pane-active-border-style fg=blue

# RENAME THE TERMINAL WINDOW TO 'folder/pane/machine name'
set -g set-titles on
set -g set-titles-string "#(echo $USER)/#{session_name}/#{window_name}"

# Prevent tmux from renaming the window to the command currently running
set-window-option -g automatic-rename off
set-option -g allow-rename off

# Increase timeout of display of pane number (prefix q)
set -g display-panes-time 10000

# -----------------------------------------------------------------------------
# Key bindings
# -----------------------------------------------------------------------------
# Reload the tmux config.
bind-key r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"
# move between panes (no default keybindings)
# bind-key h select-pane -L
# bind-key j select-pane -D
# bind-key k select-pane -U
# Default for key = switch between latest windows
# bind-key l select-pane -R
# rectangular selection in copy mode
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# set window split so panes open in current directory from which split is
# invoked - the key is the `-c "#{pane_current_path}"` suffix

bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# move window right/left -> SHIFT left/right arrow
bind-key -n S-Left swap-window -t -1\; select-window -t -1
bind-key -n S-Right swap-window -t +1\; select-window -t +1

# swap pane left/right -> PREFIX + letter H
bind-key H select-pane -L \; swap-pane -s '!'

# Open new window next to current instead of last window

bind c new-window -a

# Open new window after last window (the former default)

bind Z new-window

# Switch between the 2 latest windows
# Default `prefix l`
bind-key C-a last-window
bind-key a send-prefix

# Primarily used to wake up a dead pane - but will respawn any pane
bind-key A respawn-pane -k

# Some extra key bindings to select higher numbered windows
# Bindings after 9 are based on the ordinal position of letters of the
# alphabet, but upcased for M-. E.g.
# 10-12 = j-l, where `j-l` are the 10th-12th letters of the alphabet,
# 13 = M, where `m` is the 13th letter of the alphabet etc.
# The reason we start capital letters from letter `M` is that `bind-key m`
# is used as keymap for `monitor-activity`

bind-key j selectw -t:10
bind-key k selectw -t:11
bind-key l selectw -t:12
bind-key M selectw -t:13
bind-key N selectw -t:14
bind-key O selectw -t:15
bind-key P selectw -t:16

# A key to toggle between smallest and largest sizes if a window is visible in
# multiple places
bind F set -w window-size

bind-key X set-window-option \
  synchronize-panes\; display-message \
  "synchronize-panes is now #{?pane_synchronized,on,off}"
# Keys to toggle monitoring activity in a window and the synchronize-panes option
bind m set monitor-activity
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

# start new session automatically when we enter tmux
# new-session -A -D -d -s wiki -c ~/wiki

# -----------------------------------------------------------------------------
# Plugin Manager - https://github.com/tmux-plugins/tpm
# In order to use the plugins below you need to install TPM and the plugins.
#   Step 1) git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#   Step 2) Reload tmux if it's already started with prefix r
#   Step 3) Launch tmux and hit prefix I (capital i) to fetch any plugins
# -----------------------------------------------------------------------------

# List of plugins.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
# A tmux plugin that attempts to safely kill processes before exiting a tmux session.
set -g @plugin "humpangle/tmux-safekill"
# Use <ctrl-h> <ctrl-j> <ctrl-k> <ctrl-l> <ctrl-\> to switch between vim
# and tmux splits
# set -g @plugin 'christoomey/vim-tmux-navigator'

# remain in copy mode after yank
# https://github.com/tmux-plugins/tmux-yank#controlling-yank-behavior
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

## tmux-resurrect settings.
# set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'false'
set -g @resurrect-dir "$HOME/.tmux/resurrect"
## Restore last saved environment (automatically)
set -g @continuum-restore 'on'
## Command that is used to start tmux automatically on boot
# set -g @continuum-systemd-start-cmd 'new-session -d'
## Start tmux Automatically on Boot
# set -g @continuum-boot 'on'
## Automatic save interval in minutes - 15 minutes by default
set -g @continuum-save-interval '15'

#######   REMOVE FROM REMOTE SERVER TMUX CONFIG #######
# ==============================================
# === Nesting local and remote sessions      ===
# ==============================================
# https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -n F12  \
    set prefix None \;\
    set key-table off \;\
    set status-right "[OFF] %F %H:%M" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-right \;\
  refresh-client -S

# ==============================================
# === END Nesting local and remote sessions
# ==============================================

bind-key Q selectw -t:17
bind-key R selectw -t:18
bind-key S selectw -t:19
bind-key T selectw -t:20
bind-key u selectw -t:21

# Inverted cursor workaround for windows terminal
# https://github.com/microsoft/terminal/issues/9610#issuecomment-944940268
# I also added this line to my tmux configuration so that switching between
# panes correctly switches the cursor shape to the default:
if '[ ! -z "$WT_SESSION" ]' 'set -ga terminal-overrides ",*:Ss=\\E[%p1%d q:Se=\\E[0 q\\E[?12l"'

# TMUX safekill plugin
bind-key C-q run-shell "$HOME/.tmux/plugins/tmux-safekill/scripts/safekill.sh"

# See https://github.com/wincent/clipper#tmux-24-and-later
# Press <CR> in visual copy mode to send text to system clipboard.
# This is a workaround in case where connecting to a remote machine via macos
# does not sync remote machine's clipboard with client's.
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc -N localhost 8377"

# Initialize TPM (keep this line at the very bottom of your tmux.conf).
run '~/.tmux/plugins/tpm/tpm'
