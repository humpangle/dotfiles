{
  "name": {
    "prefix": ["helper"],
    "body": [
      "#=============================================================================",
      "# ${0:comment}",
      "#============================================================================="
    ],
    "description": ["Dockerfile helper comment"]
  },
  "docker elixir alpine": {
    "prefix": ["elixir_alpine", "alpine_elixir"],
    "body": [
      "#=============================================================================",
      "# Development image",
      "#=============================================================================",
      "FROM hexpm/elixir:1.13.4-erlang-25.0.2-alpine-3.16.0 AS dev",
      "",
      "ENV \\",
      "  PORT=4000",
      "",
      "RUN \\",
      "  addgroup -S ${1:user_name} \\",
      "  && adduser -S ${1:user_name} -G ${1:user_name} \\",
      "  && mkdir -p /app/_build \\",
      "  && mkdir -p /app/apps/${2:app_name} \\",
      "  && mkdir -p /app/apps/$0app_name1\\",
      "  && chown -R ${1:user_name}:${1:user_name} /app \\",
      "  && apk add --no-cache \\",
      "  openssl \\",
      "  git \\",
      "  ca-certificates \\",
      "  curl \\",
      "  bash \\",
      "  inotify-tools \\",
      "  iputils",
      "",
      "USER ${1:user_name}",
      "",
      "WORKDIR /app",
      "",
      "COPY \\",
      "  --chown=${1:user_name}:${1:user_name} \\",
      "  ./mix.exs \\",
      "  ./mix.lock \\",
      "  ./",
      "",
      "COPY \\",
      "  --chown=${1:user_name}:${1:user_name} \\",
      "  ./apps/app_name1/mix.exs \\",
      "  ./apps/app_name1",
      "",
      "COPY \\",
      "  --chown=${1:user_name}:${1:user_name} \\",
      "  ./apps/${2:app_name}/mix.exs \\",
      "  ./apps/${2:app_name}",
      "",
      "COPY \\",
      "  --chown=${1:user_name}:${1:user_name} \\",
      "  --chmod=755 \\",
      "  ./run.sh \\",
      "  /usr/local/bin/run",
      "",
      "COPY \\",
      "  --chown=${1:user_name}:${1:user_name} \\",
      "  . .",
      "",
      "RUN \\",
      "  mix local.hex --force \\",
      "  && mix local.rebar --force \\",
      "  && mix deps.get",
      "",
      "EXPOSE 4000",
      "",
      "CMD [\"/bin/sh\"]",
      "",
      "#=============================================================================",
      "# BUILD IMAGE",
      "#=============================================================================",
      "",
      "FROM dev AS build",
      "",
      "ARG RELEASE_NAME",
      "",
      "ENV \\",
      "  MIX_ENV=prod \\",
      "  RELEASE_NAME=\\${RELEASE_NAME}",
      "",
      "RUN \\",
      "  mix do deps.get --only prod, compile \\",
      "  && mix release \\${RELEASE_NAME}",
      "",
      "#=============================================================================",
      "# PRODUCTION IMAGE",
      "#=============================================================================",
      "FROM hexpm/elixir:1.13.4-erlang-25.0.2-alpine-3.16.0 AS prod",
      "",
      "ARG RELEASE_NAME",
      "",
      "ENV \\",
      "  PORT=4000 \\",
      "  LANG=C.UTF-8 \\",
      "  MIX_ENV=prod \\",
      "  RELEASE_NAME=\\${RELEASE_NAME}",
      "",
      "RUN \\",
      "  addgroup -S ${1:user_name} \\",
      "  && adduser -S user_name -G user_name \\",
      "  && apk add --no-cache \\",
      "  openssl",
      "",
      "USER user_name",
      "",
      "WORKDIR /app",
      "",
      "COPY \\",
      "  --from=build \\",
      "  --chown=user_name:user_name \\",
      "  /app/_build/prod/rel/\\${RELEASE_NAME} \\",
      "  ./",
      "",
      "COPY \\",
      "  --from=build \\",
      "  --chown=user_name:user_name \\",
      "  --chmod=755 \\",
      "  /usr/local/bin/run \\",
      "  /usr/local/bin/run",
      "",
      "RUN mv bin/\\${RELEASE_NAME} bin/run",
      "",
      "EXPOSE 4000",
      "",
      "CMD [\"/app/bin/run\", \"start\"]"
    ],
    "description": ["Dockerfile elixir alpine"]
  }
}
