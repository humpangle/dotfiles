{
  "typescript.suggestionActions.enabled": false,
  "javascript.suggestionActions.enabled": false,
  "typescript.showUnused": false,
  "javascript.showUnused": false,
  // "tsserver.log": "verbose",
  "css.validate": false,
  "cSpell.userWords": ["Kanmii", "NEOVIM", "arity"],
  "cSpell.ignoreWords": [],
  "cSpellExt.enableDictionaries": ["german", "french", "spanish"],
  "cSpell.language": "en,de,fr,es",
  "elixirLS.dialyzerEnabled": false,
  "languageserver": {
    /* npm i -g graphql-language-service-cli */
    //    "graphql": {
    //     "command": "graphql-lsp",
    //    "args": ["server", "-m", "stream"],
    // customize filetypes to your needs
    //   "filetypes": ["typescript", "typescriptreact", "graphql"]
    // }
    // https://github.com/rodrigore/coc-tailwind-intellisense/issues/29#issuecomment-1000861947
    // npm install -g @tailwindcss/language-server
    "tailwind-lsp": {
      "command": "tailwindcss-language-server",
      "args": ["--stdio"],
      "filetypes": [
        "html",
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "vue",
        "elixir"
      ],
      "rootPatterns": [
        "tailwind.config.js",
        "tailwind.config.ts",
        "postcss.config.js",
        "postcss.config.ts",
        "package.json",
        "node_modules",
        ".git"
      ],
      "settings": {
        "tailwindCSS": {
          "validate": true,
          "lint": {
            "cssConflict": "warning",
            "invalidApply": "error",
            "invalidScreen": "error",
            "invalidVariant": "error",
            "invalidConfigPath": "error",
            "invalidTailwindDirective": "error",
            "recommendedVariantOrder": "warning"
          },
          "classAttributes": ["class", "className", "classList", "ngClass"],
          "experimental": {
            // Rules for writing regex: you must capture `()` the pattern where
            // you want tailwindCSS to put classes
            "classRegex": [
              // cn(' tailwind-class') - a random char must follow '/"/` before tailwind-class
              "cn\\(([^()]*)\\)",
              // [some-key]: `(tailwind-class)`
              // [some-key]: '(tailwind-class)'
              // [some-key]: "(tailwind-class)"
              "\\[.+\\]:\\s*(?:\"|'|`)([^)]*)(?:\"|'|`)",
              "\\[.+\\]:\\s*`([^)]*)`",
              // In eelixir templates:
              //    class: "tailwind-class"
              ["class:\\s*\"([^\"]*)\""],
              "class=\"([^\"]*)\""
              // 'tailwind-class' "tailwind-class"
              // "(?:\"|'|`)([^(?:\"|'|`)]*)(?:\"|'|`)",
            ]
          }
        }
      }
    },
    "erlang": {
      "command": "erlang_ls",
      "filetypes": ["erlang"]
    }
  },
  "Lua.diagnostics.globals": [
    "vim",
    "use",
    "describe",
    "it",
    "after_each",
    "before_each"
  ],
  "snippets.loadFromExtensions": true,
  "snippets.textmateSnippetsRoots": ["~/.config/nvim/snippets"],
  "snippets.extends": {
    "javascriptreact": ["javascript"],
    "typescript": ["javascript"],
    "typescriptreact": ["typescript"],
    "svelte": ["javascript"],
    "vue": ["javascript"],
    "html": ["eelixir"]
  },
  "intelephense.progress.enable": false,
  "intelephense.telemetry.enabled": false,
  // "coc.preferences.formatOnSaveFiletypes": ["json", "typescript", "javascript"],
  "volar.diagnostics.enable": false,
  "volar.codeLens.references": false,
  /* "volar.codeLens.scriptSetupTools": false, */
  /* "volar.formatting.enable": false, */
  "prettier.disableLanguages": [],
  "emmet.includeLanguages": {
    "vue-html": "html",
    "javascript": "javascriptreact",
    "blade": "html"
  }
  // "tailwindCSS.includeLanguages": {
  //   "vue-html": "html",
  //   "vue": "html"
  // },
  // "tailwindCSS.enable": true,
  // "tailwindCSS.emmetCompletions": true,
  // "tailwindCSS.experimental.classRegex": [
  //   [
  //     // cn('tailwind-class')
  //     "(?:classnames|classNames|cn)\\(([^)]*)\\)",
  //     // 'tailwind-class' "some-class"
  //     "(?:\"|'|`)([^(?:\"|'|`)]*)(?:\"|'|`)",
  //     "class:\\s*\"[^\"]\""
  //   ],
  //   // [some-key]: `(tailwind-class)` ("some-class") (`some-class`) ('some-class')
  //   ["\\[.+\\]:\\s*`([^)]*)\\`", "([^(?:\"|'|`)]+)\\s*"],
  //   // class: "tailwind-class"
  //   ["class:\\s*\"[^\"]\""]
  // ],
  // "tailwindCSS.classAttributes": ["class", "className", "classList", "ngClass"],
  // "tailwindCSS.includeLanguages": {
  //   "eelixir": "html",
  //   "elixir": "html",
  //   "eruby": "html",
  //   "htmldjango": "html",
  //   "html.twig": "html",
  //   "typescriptreact": "html"
  // }
}
