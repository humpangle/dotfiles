https://www.batterybuy.co.uk/

https://www.ebay.co.uk/p/Lenovo-ThinkPad-T480s-14-512GB-Intel-Core-i7-8th-Gen-4-00-GHz-16GB-Laptop-Black-20L7001LUK/28024831439?_trkparms=aid%3D666006%26algo%3DPRP.MBE%26ao%3D1%26asc%3D20151029144032%26meid%3D80eea66b1f4f4af69a5471f4a6240346%26pid%3D100534%26rk%3D2%26rkt%3D5%26pg%3D2322090&_trksid=p2322090.c100534.m4207

https://stackoverflow.com/jobs/302272/full-stack-developer-bpi-inc?so=i&pg=1&offset=3&so_medium=Internal&so_source=JobSearch

Full Stack Engineer


Doing full stack web development and general software development.

My main areas of expertise are: front-end and back-end web development. I am especially interested in back-end web development with Node.js, Python and Elixir and front-end development with React.

I am mostly interested in working with front-end and back-end web development.

My main tech stack is:
JavaScript: ~ 4 years professional experience
React: ~ 4 year professional experience
NodeJS: ~ 4 year professional experience
Python: ~ 4 year professional experience
Elixir: ~ 1 year professional experience
-------------------------------------------------------------

How to Do 90% of What Plugins Do (With Just Vim)
------------------------------------------------
https://www.youtube.com/watch?v=XA2WjJbmmoM


Elixir RAM and the Template of Doom
==============================
https://www.evanmiller.org/elixir-ram-and-the-template-of-doom.html

SSH Crash Course | With Some DevOps
=============================
https://www.youtube.com/watch?v=hQWRp-FdTpc


Exploring Docker [1] - Getting Started
===============================
https://www.youtube.com/watch?v=Kyx2PsuwomE&t=40s


learn shell
===========
http://linuxcommand.org/lc3_lts0090.php

Full Node.js Deployment - NGINX, SSL With Lets Encrypt
========================================================
https://www.youtube.com/watch?v=oykl1Ih9pMg


The Greatest Regex Trick Ever
============================
http://www.rexegg.com/regex-best-trick.html


http://blog.plataformatec.com.br/2018/11/building-a-new-mysql-adapter-for-ecto-part-i-hello-world/


compare page speed
==================
https://www.thinkwithgoogle.com/feature/testmysite/



Downtime Happens. Get Notified! 50 Monitors, Checked Every 5 Minutes, Totally Free! - to ping/keep heroku alive
==============================================================================================
https://uptimerobot.com/


State machine implementations
==============================
http://machina-js.org/
https://github.com/davidkpiano/xstate
https://github.com/krasimir/stent



GOTO 2018 • Computer Science - A Guide for the Perplexed • Joe Armstrong
=======================================================================
https://www.youtube.com/watch?v=rmueBVrLKcY


What Tamagotchis can teach you about generators | Jenn Creighton | JSConf Korea 2019
===========================================
https://www.youtube.com/watch?v=BONVAOgovHM


Build and Deploy a Realtime Chat Application - Socket.io, Node.js, and React.js
============================
https://www.youtube.com/watch?v=ZwFA3YMfkoc


Let’s Chat about Concurrency - python
====================================
https://www.youtube.com/watch?v=9zinZmE3Ogk
https://pybay.com/site_media/slides/raymond2017-keynote/index.html

How to connect to an external Postgres database from a Docker container
====================================================
https://winstonkotzan.com/blog/2017/06/01/connecting-to-external-postgres-database-with-docker.html


chokidar "apps/**/*.ex*" -i "**/mix.exs" -i "**/priv/**" -i "**/config/**" -i "**/eb_emails/**" --initial -c "mix test "

/mnt/c/Users/kanmii/AppData/Roaming/npm/chokidar "**/*.ex*" -i "**/deps/**" -i "**/_build/**" -i "**/.elixir_ls/**" -i "**/assets/**" -i "**/mix.exs" -i "**/priv/**" -i "**/config/**" --initial -c "mix test "

C:\Users\kanmii\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc\LocalState\rootfs

https://theithollow.com/2018/08/06/using-aws-codedeploy-to-push-new-versions-of-your-application/

https://github.com/ghengeveld/react-webworker
https://github.com/rohanBagchi/react-webworker-demo

https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle

HAPROXY LOGGING AND MONITORING
===================
https://hydrasky.com/linux/haproxy-logging-and-monitoring/

https://medium.com/@zek/automated-backups-with-the-ruby-backup-gem-and-amazon-s3-f0f2f986876e

http://engineering.teacherspayteachers.com/2018/02/22/database-transactions-or-how-i-learned-to-stop-worrying-and-love-ecto-multi.html


Getting a React + Django App to Production on DigitalOcean with Travis, Caddy and Gunicorn
=========================
https://medium.com/@jans.tuomi/getting-a-react-django-app-to-production-on-digitalocean-with-travis-caddy-and-gunicorn-5c397383fcd5

my HP laptop specs
==================
Pavilion 17-e019dx Intel Core i3-2.4GHz


hp pavillion 17 hdd -> ssd
==========================
https://www.youtube.com/watch?v=vTCKx6gUjvM

https://hackernoon.com/the-100-code-coverage-myth-900b83d20d3d

water
==============================================================================
https://www.schwarzwald-tourismus.info/Weltbekannte-Schwarzwaelder-Spezialitaeten/Schwarzwaelder-Mineralwasser
https://www.schwarzwald-sprudel.de/index.php/sortiment.html
https://www.sww-labor.de/

preparing for python interview
========
https://www.youtube.com/watch?v=DEwgZNC-KyE


easybell - 15202676445702593115

Sandboxie - Personal License
Your cleverbridge reference number: 44402113
Licensee Name: ADEKANMI ADEMIIJU
Product Key: 2DZTK-MLQM8-27BQ9-NMZG3-63JRG



WEB DEV RESOURCES
https://onlinefontconverter.com/
https://www.robinwieruch.de/graphql-apollo-server-tutorial/#cursor-based-pagination-page-info-connections-hashes
https://resizeimage.net/

==============================================================================

SHORTCUTS
UBUNTU
==============================================================================
ctrl L = clear terminal
ctrl shift t = new terminal tab
alt + (key above tab key) = switch between windows of same application

==============================================================================

inotify problem

sudo apt-get install inotify-tools

To check the max number of inotify watches:

cat /proc/sys/fs/inotify/max_user_watches
To set max number of inotify watches

Temporarily:
Run sudo sysctl fs.inotify.max_user_watches= with your preferred value at the end e.g 524288

Permanently (more detailed info):

put fs.inotify.max_user_watches=524288 into your sysctl settings at /etc/sysctl.conf

you may wish to reload the sysctl settings to avoid a reboot: sysctl -p

https://unix.stackexchange.com/questions/13751/kernel-inotify-watch-limit-reached

==============================================================================

postgresql
create new super user
$ create user user_name superuser;

let user create databases
$ alter user user_name createdb;

$ drop user username;


to use without password,
get to postgresql/<version>/data/pg_hba.conf
uncomment lines host-replication-all-..-md5 and replace lines host-all-all-..-md5 replace md5 with trust


setup postgres with asdf for the first time:
$bash command: psql -d postgres -c "create user postgres superuser"

if there is no data director, create one /var/lib/pgsql/data and in the newly created directory, run initdb the set PGDATA environment variable to the director

==============================================================================

phoenix and create react app
There is no need to eject cra. I just need to make sure all URLs that will not be served from react app begins with __ (double underscore - provision for this exception was made in webpack.prod.js) and then in plug redirector, I configure __ to be served from plug router and all others to be served from create react app

==============================================================================

APOLLO GRAPHQL

consider this sql query

`
select id, name as text, table1_name as source from table1
union
select id, author as text, table2_name as source from table2
`

and a schema definition that looks like this (elixir absinthe):

object :some_name do
  field :id, :id
  field :text, :string
end

and a result that looks like this - (Javascript)

[
  {id: 17, text: "text1", source: 'table1_name'},
  {id: 17, text: "text2", source: "table2_name"}
]

Then apollo graphql will give you:

[
  {id: 17, text: "text2", source: "table2_name"}
]

Bcos you gave the `id` field type ID, then it expects the ID field to be unique

==============================================================================

Explain how to type react-apollo graphQl function

graphQl<OwnProps, TData, TVariables, PropsThatWillBeReturnedFromThisCall | undefined>

OwnProps = component props without the apollo data props or mutation props i.e injected data/mutation
TData = result from querying graphql backend server

TVariables = variables needed to query

PropsThatWillBeReturnedFromThisCall= graphQl<>(DOCUMENT_NODE, {props: (props) => PropsThatWillBeReturnedFromThisCall }) (Note: if you want to return this, make sure to also return undefined - otherwise typescript will yell at you most times.).  If you dont' specify "PropsThatWillBeReturnedFromThisCall", ChildProps<OwnProps, TData, TVariables> will be returned with all kinds of graphQl functions and ppties apart from loading, error, and your data (functions such as: fetchMore, startPolling, ppties like networkStatus - which you don't need most of the time.)

interface OwnProps {
  solutionId: string;
}

const withProps = graphql<OwnProps, TData, TVariables>(
  historyQuery,
  {
    props: (props) => ({
      ...props // cos you did not specify PropsThatWillBeReturnedFromThisCall. props also include ownProps
    }),

    options: ownProps => ({
    variables: {
      solutionId: ownProps.solutionId,
    },
  })
  },
);


// with custom props
const withProps = graphql<OwnProps, TData, TVariables, { organisationData: DataValue<TData, TVariables>}  | undefined >(
  historyQuery,

  {
    props: ({ data }) => data && {organisationData: data, },
  },
);

// for mutation, I will mostly use like so"

const withMutation = graphql<OwnProps, TMutationData, TVariables, { create: MutationFn<TMutationData, TVariables> }  | undefined >(
  MUTATION_QUERY,

  {
    props: ({mutate}) => mutate && {create: mutate}
  },
);

==============================================================================

Typescript

1. using enum values as type
enum Something {
  A  = 'a',
  B = 'b'
}

type FromEnum = {[k in Something]: JSX.Element }

const fromEnum = {
  [Something.A]: <head/>,
  [Something.B]: <Tail/>
}

2. using enum keys (number) as type
type FromEnum = {[k in keyof typeof Something]: JSX.Element }
const fromEnum: FromEnum = {
  0: <head/>,
  1: <Tail/>
}

3. using interface keys as type

interface Something {
  a: string;
  b: string;
}

type FromSomething {[k in keyof Something]: Something[k]}
const fromSomething: FromSomething =  {
  a: 'you',
  b: 'me'
}

4. using object keys
const object = {a: 1, b: 2, c: 3}
type FromObject = {[k in keyof typeof object]: object[k]}

==============================================================================

deploy phoenix project to heroku

> heroku apps:create {app_name} --buildpack "https://github.com/HashNuke/heroku-buildpack-elixir.git" && heroku addons:create heroku-postgresql:hobby-dev && heroku config:set POOL_SIZE=18 && heroku config:set PORT=443

> mix phx.gen.secret
> heroku config:set SECRET_KEY_BASE=""
> heroku run "POOL_SIZE=2 mix ecto.migrate"

==============================================================================

ubuntu which program is using which port
lsof -t -i :8000 | xargs ps -fp


which program running on which port on windows
netstat -a -b

==============================================================================

esther
04/22

507

5415 9012 5048 8472


WES
WES Reference No. 4206619 _ _ _ _ _ _ _
World Education Services
Attention: Documentation Center
2 Carlton Street, Suite 1400
Toronto, Ontario M5B 1J3
Canada

==============================================================================

xpath

y = document.evaluate("//button[text()=\"New entry\"]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;

===============================================================================

get IP address online

https://api.ipify.org
fetch('https://api.ipify.org').then(x => x.text()).then(x => console.log(x) )

===============================================================================

Restore Your USB Key to its original state on windows
https://www.pendrivelinux.com/restoring-your-usb-key-partition/

Open a command Prompt as administrator (cmd.exe)
Type Diskpart and press Enter
Type List Disk and press Enter
Type Select Disk X (where X is the disk number of your USB drive) and press Enter
Type Clean and press Enter
Type Create Partition Primary and press Enter
Type Active and press Enter
Type Format fs=Fat32 Quick and press Enter
Type Exit and press Enter

===============================================================================

design ideas to copy
https://theme-fusion.com/documentation/avada/pages/anchor-scrolling/#iLightbox[a13dac47030eb199dc0]/0

===============================================================================
git credential

git config --global credential.helper 'cache --timeout 28800'
####Above command will tell git to cache your password for 8 hours.

git credential-cache exit
If you want to switch to another github account then u can run this command - Above command will flush any stored password from cache

git config --global credential.helper wincred
Windows User ?

===============================================================================

google gmail smtp account allowed from less secured devices e.g. heroku
visit the followings:
https://www.google.com/settings/security/lesssecureapps
https://accounts.google.com/DisplayUnlockCaptcha

===============================================================================

learn algorithm interview
https://www.algoexpert.io/questions/Max%20Profit%20With%20K%20Transactions

===============================================================================

list details of network adapters on ubunut run command:
sudo lshw -class network

ubuntu change hostname:
edit the two files
/etc/hostname
/etc/hosts

ubuntu fix wifi dropping

INSTRUCTIONS:

1. Open Terminal and execute this command(needs git installed)
     if you don't have git installed just download the rtl8723be zip and extract and skip this.

     --> git clone https://github.com/lwfinger/rtlwifi_new.git

2. --> sudo make
 3. --> sudo make install
 4. --> sudo modprobe -rv rtl8723be
 5. --> sudo modprobe -v rtl8723be ant_sel=2
 6. --> echo "options rtl8723be ant_sel=2" | sudo tee /etc/modprobe.d/50-rtl8723be.conf

its because the ubuntu default kernal uses the wrong antenna for wifi.
https://www.quora.com/Why-does-my-WiFi-get-disconnected-on-its-own-in-Ubuntu

===============================================================================

activate conda environment automatically
https://stackoverflow.com/questions/28436769/how-to-change-default-anaconda-python-environment

===============================================================================

typescript Type error: Duplicate identifier 'YYYType'.  TS2300

resolution
====
1. inside your tsconfig.json file, under compilerOptions, add key "types": [
  ..."the types from your package.json that you need in this project"
]

if above not possible, say, because you have too many types and you'll have to
explicitly list them all, then in package.json:

"resolution": {
  "@types/react": "0.16.5"
}

The reason is that more than one package requires the package type as
dependency and causing the conflict. By pinning via the package.json resolution
field, we ensure only one copy in our node_modules folder and therefore no

===============================================================================

css
font-variant-numeric
===============================================================================

postgres citext
====

CREATE EXTENSION IF NOT EXISTS "citext";

postgres uuid asdf
=======

on ubuntu - first
# sudo apt install -y uuid-dev

then

# POSTGRES_EXTRA_CONFIGURE_OPTIONS=--with-uuid=e2fs asdf install postgres 11.2


postgresql full text search
===========

slow
====
select col1, col2, col...
from table-name
where to_tsvector(col1 || ' ' col2 [...|| col..] ) @@ to_tsquery('text_to_search')

fast 1. pre-compute the vector value 2. add gin index
====
ALTER TABLE table-name
  ADD COLUMN document_with_idx tsvector; -- (document_with_idx is the column name - you can call it anything. tsvector is the column type )

CREATE INDEX document_idx
  ON table-name
  USING GIN (document_with_idx);

-- update existing rows
UPDATE table-name SET document_with_idx = to_tsvector(col1 || ' ' col2 || ' ' || coalesce(text, '')  ); -- coalesce(text, '') means turn null values into empty string

-- create trigger for future row additions and updates
CREATE FUNCTION table_name_ts_vector_trigger() RETURNS trigger AS $$
begin
  new.document_with_idx := to_tsvector(col1 || ' ' col2 || ' ' || coalesce(text, '')  );
  return new;
$$ LANGUAGE plpgsql;

CREATE TRIGGER tsvectorupdate BEFORE INSERT OR UPDATE
  ON table-name FOR EACH ROW EXECUTE PROCEDURE table_name_ts_vector_trigger();

    usage
    =====

SELECT col1, col2, col..
FROM table-name
WHERE document_with_idx = @@ to_tsquery('text_to_search'); -- or plainto_tsquery(:query_parameter)





=================================

start mongodb
sudo service mongod start
mongod --dbpath ./mongodb/data/ --port 27018 --logpath ./mongodb/logs/mongodb.log --fork # paths /mongodb/data/ and /mongodb/logs/ must exist

start mongo shell
mongo --port 27018

==========================================================================================================================



OmoojujiAbetijaO!e
oluOmoApena!
ajaoniKoko&bo!ahan
============================================================================================================================

curl
=======
curl -d '{"key1":"value1", "key2":"value2"}' -H "Content-Type: application/json" -X POST http://localhost:3000/data

curl -X POST \
  -H "X-Parse-Application-Id: $APP_ID" \
  -H "X-Parse-REST-API-Key: $KEY" \
  -H "Content-Type: application/json" \
  -d '{"score": 1337, "playerName": "Sean Plott", "cheatMode": false }' \
  https://api.parse.com/1/classes/GameScore

curl -X POST \
  -H "X-Parse-Application-Id: $APP_ID" \
  -H "X-Parse-REST-API-Key: $KEY" \
  -H "Content-Type: application/json" \
  -d '{"operationName":"LoginUser","query":"mutation LoginUser($input: LoginInput!) { login  (input: $input ) {id \n jwt} }","variables":{"input":{"username":"123456","password":"123456"}} }' \
  http://127.0.0.1:4996/graphql



===============================================================================================================================

asdf ubuntu conda node-gyp
===========
in .bashrc
alias node-gyp='node-gyp --python /path/to/executable/python2.7'

in cmder
node-gyp=node-gyp --python C:/path/to/executable/python2.7/python.exe $*

# npm config -g set python /path/to/executable/python2.7

on windows
node-gyp configure --msvs_version=2017
npm config set msvs_version 2017 -g

if the above don't work, create a file binding.gyp in the root of your project and put the below from https://github.com/nodejs/node-gyp#the-bindinggyp-file :

{
  "targets": [
    {
      "target_name": "binding",
      "sources": [ "src/binding.cc" ]
    }
  ]
}


in powershell as admin, invoke 'npm install -g windows-build-tools'   ------------------ this is what worked eventually




===============================================================
jest
jest.fn<returnedVal, ...args>( (..args) => resturnedVal )


===========================================
styled-components typescript
to your aaaa.d.ts file, add:

/// <reference types="styled-components/cssprop" />

in jest.config.js, under moduleNameMapper: {
  "^styled-components": "<rootDir>/node_modules/styled-components",
  ...
}


==================================================
graphql server project

yarn add apollo-link apollo-link-http apollo-link-ws apollo-server-express bcrypt-nodejs cors express graphql graphql-import graphql-iso-date graphql-resolvers graphql-tag jsonwebtoken morgan node-fetch node-graceful pg reflect-metadata subscriptions-transport-ws tslib typeorm winston ws yup



yarn add --dev --exact @types/bcrypt-nodejs @types/graphql @types/graphql-resolvers @types/jest @types/jsonwebtoken @types/morgan @types/node-fetch apollo-server-testing chokidar-cli concurrently env-cmd @graphql-codegen/cli @graphql-codegen/typescript @graphql-codegen/typescript-operations @graphql-codegen/typescript-resolvers jest nodemon shelljs rimraf ts-jest ts-node tslint tslint-config-prettier typescript @types/yup


=============================================================================================

Moving projects between windows and linux (git)
------------------------------------
1. in project/.git/config, change filemode to false
2. for npm packages `npm rebuild --update-binary`

=========================

hump--ZiMmEr321

==================================
problems with jest
-------
if you have async tests in jest and you do not use await or handle promise rejections, then all kinds of weird problems can occur

================================================================================
set up gatsby project
=====================

yarn workspace nina-fe add --dev @cypress/webpack-preprocessor @types/graphql @types/jest @types/lodash @types/reach__router @types/react @types/react-dom @types/yup babel-preset-gatsby cypress-file-upload cypress-testing-library eslint-plugin-graphql identity-obj-proxy jest jest-dom prettier react-testing-library serve start-server-and-test ts-jest ts-loader tslint tslint-config-prettier tslint-react typescript ts-node cypress







================================================================================
build c packages from elixir in windows
put the below in a file (e.g. dev.bat) on your path
"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" amd64

================================================================================
                          start ubuntu tutorial
=================================================================================
the terminal prefix is: username@computername:directory_name$

sudo = superuser do

su = switch user

su kanmii = switch user as kanmii

sudo su = switch user as superuser

sudo !! = run previous command as sudo

/user/shared/applications === c:/programdata/start menu/programs/

ctrl + alt + t = new terminal

in file system, ctrl + t = new tab

ls -p = identify which are directories (suffixed forward slash. color coded) same as ls -F

ls -r === reversed i.e descending order

ls -s = list based on file size

ls -l = long/verbose

drwxr-xr-x  3 kanmii kanmii 4,0K Mär  5 21:04 .hex # drwxr-xr-x  === owner-group-public permissions. d == directory. r = read. w = write. x = execute. kanmii kanmii = usrname group-name

-rw-r--r--  1 root   root     56 Mär 28 10:33 000.txt # owner can read and write. group and public can read only. file is owned by root and public is root.

apt = aptitude
===
apt-cache policy google-chrome* # give me info about google-chrome*
sudo apt upgrade
sudo add-apt-repository repository-path

deb files
===
sudo dpkg -i file-path

nano
====
options are at bottom of screen,
ctrl + o = save

file permission
======
6 = rw
4 = r
7 = directory

sudo chmod 664 filename # owner=rw, group=rw, public=r
sudo chown root:groupname # change ownership to root and group to group name
sudo chown -R username:groupname directory_name # change ownerhsip of directory and all files in it.


find
===
find . -type f -name "*.txt"
find . -type f -iname "*.txt"
find . -type f -not -iname "*.txt"
find /etc -type f -iname "*.conf" # recursive
find /etc -maxdepth 1 -type f -iname "*.conf" # control recursion
find /etc -type f -iname "*.conf" -size +10k
find /etc/ -type f -iname "*.conf" -exec  grep -in "scan"  {} +
grep -in "scan" /etc/sane.d/*


redirect output
=====================
ls -alh | tee out.txt

processes
===========
top
ps aux | grep -i youtube
kill -9 pid
killall process_name
pgrep process-name

services
=====
sudo systemctl start service_name


cron
===
crontab -e

================================================================================
                              end ubuntu tutorial
================================================================================

npm install sharp problems
windows (try one at a time - re-installing each time)

===============================================================================

1. try downloading binaries from https://github.com/lovell/sharp-libvips/releases and place in C:\Users\<profile name>\AppData\Roaming\npm-cache\_libvips
2. delete contents of C:\Users\<profile name>\.node-gyp
3. npm --build-from-source i sharp
4. cd into project/node_modules/sharp and run "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js" "rebuild"




npm install node-sass problems
==============================
I encountered this problem mostly because I had slow internet connections. Solution: download sass binaries from
https://github.com/sass/node-sass/releases
and set environment variable SASS_BINARY_DIR or SASS_BINARY_PATH to the download path before npm install
[https://www.npmjs.com/package/node-sass#binary-configuration-parameters]

=================================================================================

Apollo graphql - order in which functions are executed in compose from react-apollo = from first argument to last

export const Experience = compose(
  a,
  b,
  c
)(Comp);

a will run, then b then c

================================================================================

Steps to access Android Devices in Ubuntu, Linux Mint

sudo apt install go-mtpfs mtp-tools

plug in your device and select 'file transfer' instead of 'charging' in device USB options. This should work. If not, type command:

mtp-connect

to see your connected devices
mtp-detect



================================================================================

typescript
Omit<T, K> = Pick<T, Exclude<keyof T, K>>
================================================================================


tar -cjvf file_to_save_to.tar.bz2 file_or_folder_to_archive
tar -xjvf archive.tar.gz

================================================================================

sftp ssh_server

get remoteFile localFile
get -r someDirectory
get -Pr someDirectory # maintain permissions
put localFile
put -r localDirectory

================================================================================

Soft symbolic link
------------------
to create symlink of ~/dotfiles/nvim/init.vim to ~/.config/nvim/init.vim.
1. cd ~/.config/nvim
2. ln -s ~/dotfiles/nvim/init.vim init.vim
3. ls ~/.config/nvim # should now include init.vim (albeit a symlink)
================================================================================

uncomplicated firewalls
sudo nano /etc/default/ufw and set IPV6=yes
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh
sudo ufw enable
sudo ufw status verbose
sudo ufw allow 80
sudo ufw allow 443

================================================================================

find which IP address can be used to talk to my computer from outside
$ curl -4 icanhazip.com

================================================================================

## haproxy config valid?
$ haproxy -f /etc/haproxy/haproxy.cfg -c

================================================================================

How to Switch Between Multiple Java Versions on Ubuntu 18.04 & 16.04


sudo update-alternatives --config java

==============================================================================

install erlang via asdf on ubuntu 18


1.
$ sudo apt -y install build-essential autoconf m4 libncurses5-dev libwxgtk3.0-dev libgl1-mesa-dev libglu1-mesa-dev libpng-dev libssh-dev unixodbc-dev xsltproc fop libxml2-dev libxml2-utils libxrender1 libxtst6 libxi6 openjdk-8-jdk

2.
echo 'export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64/"' >> .bashrc

3. sudo update-alternatives --config java

4. in .bashrc
export KERL_BUILD_DOCS=yes
export KERL_INSTALL_MANPAGES=yes
export KERL_INSTALL_HTMLDOCS=yes

5.
$ asdf plugin-add erlang
$ asdf install erlang <version>

==============================================================================

Absinthe data loader
==============================================================================
hints:
1. last argument = 1 item or keyword list = Dataloader.load
2. last argument = list of items (not keyword list) = Dataloader.load_many

1. user.posts
Dataloader.load loader, source, :posts, user

2. user.posts, get undeleted posts
Dataloader.load loader, source, {:many, :posts, deleted: false}, user

3. Get one user by id
Dataloader.load loader, source, User, id

4. Get many users by id
Dataloader.load_many loader, source, User, [ids...]

5. Get many users by name column, less than 5 years old
Dataloader.load_many loader, source, {User, age: 5 }, name: name_value
    use like so:
    Dataloader.new()
    |> Dataloader.add_source(
      :source_name,
      MyApp.Repo
      |> Dataloader.Ecto.new( query: fn User, args ->
        import Ecto.Query, warn: false
        query = User

        query = case Keyword.get( args, :name  ) do
          nil -> query
          name -> where(query, [u], u.name == ^name)
        end

        case Keyword.get( args, :age  ) do
          nil -> query
          age -> where(query, [u], u.age < ^age)
        end
      end)
    )
    |> Dataloader.load_many(:source_name, {User, age: 5 }, name: "john")
    |> Dataloader.run()
    |> Dataloader.get_many(:source_name, {User, age: 5 }, name: "john")

6. do something custom - here, we wish to load experience.entries which resolves into a single value - a relay connection i.e:
  %{
    page_info: %{},
    entries: [
      %{
        node: %{},
        cursor: "string"
      }
    ]
  }

Dataloader.new()
|> Dataloader.add_source(
  :source_name,
  MyApp.Repo
  |> Dataloader.Ecto.new(
    run_batch: fn( Experience, _query, :entries, [{experience_id, args}], repo_opts ->
      import Ecto.Query, warn: false

      {:ok, result} = Experience
      |> where([m], m.id == ^experience_id)
      |> Absinthe.Relay.Connection.from_query(&MyApp.Repo(&1, repo_opts), args[:pagination] || %{first: 100} )

      [result]
    end)
  )
)
|> Dataloader.load(:source_name, {:one, Experience}, entries: {5, pagination_args = %{}} )
|> Dataloader.run()
|> Dataloader.get(:source_name, {:one, Experience}, entries: {5, %{}} )

notes:
1. we passed {:one, Experience} because we are expecting a single result. If we were expecting multiple results, then {:many, Experience} must be used e.g if we were not
using relay and instead expected to receive a list of entries.
2. Note that your run_batch function will always be given a list of your keys even if you supplied just one e.g {5, %{}} as above will get sent to your function as
[{5, %{}}]
3. You must return a list from your run_batch function (yes seems odd cos we were expecting one result but that is the dataloader spec.)


===============================================================================

cypress globals/windows/env issues
-----------------------
Cypress.env will be same for all tests inside a spec file - so do not forget to reset Cypress.env(tag) if tag value must be unique among tests in same file.

in Cypress, there are 2 window objects - one which belongs to cypress where you find window.Cypress and one belonging to your app. If you need your app window in cypress test, then you must access (await) cy.window (which will slow down your test if you need it before your app runs)

===============================================================================

hp pavillion touchpad not working

window-
----
first try double-clicking on top left corner of touchpad to enable it. If that does not work, you can disbale 'disabling the touchpad' like so:

In the control panel, select Hardware and Sound. Select Devices and Printers. Select Mouse.
Select the Device Settings tab. Click Settings.
Select Tapping. Click the settings icon.
Uncheck "Double Tap to Enable or Disable Touch Pad".

ubuntu
---
install GNOME tweaks
1. keyboard and mouse -> touchpad -> disable while typing -> off

===============================================================================

hash table
slot = value returned by a hash function -> indicates the position of item in the table.
hash function
  modulo = (item value) % (hash table size)
  perfect hash function = maps every item to unique slot
  folding method = divide item to be stored into equal sizes (2,3,etc) - last size does not
    need to be equal, add all sizes and perform modulo e.g 436-555-4601. equal sizes of two
    43+65+55+46+01 = 210 % (table size)
  folding method - reverse every other - 43+56+55+64+01=219 % table size
    (note 65 -> 56 and 46 -> 64)
  mid-square method: square the item and extract some middle and perform module
    to store 44 -> 442=1936. middle = 93 % table size
  character hash: sum the ordinal values and take module of sum
    'cat' = 99+97+116 = 312 % (table size). For anagram, multiply every ordinal by 1-based
    index of character -> 'cat' = 99*1 + 97*2 + 116*3 = 641 % table size
load factor = num items / size hash table. E.g if we store 6 items in table size 13, then load
  factor = 6/13. load factor close to 1? we are not wasting space. Load factor > 1 ->
    collission
collission: two items hash to same value
Collision Resolution: process of finding a slot for an item when it hashes to a slot occupied by another item
rehashing = Methods of Collision Resolution:
  open addressing: starting from collission point we move in sequential manner till we find next open slot.
    linear probing: open addressing where we visit next slots one at a time till we find open slot. Demerit = clustering. rehash(pos)=(oldhashvalue + 1)%sizeoftable
    extended linear probing: rehash(pos)=(oldhashvalue + skip) % sizeoftable, where skip > 1
    quadratic probing: rehash(pos)=(oldhashvalue + skip) % sizeoftable, where skip = 1, 4, 9, 16.... i.e. successive perfect squares
    Chaining: rather than store a single value per slot, we store a collection of all items that hash to that slot.
==============================================================================
power of 2
Power Value
0 1
1 2
2 4
3 8
4 16
5 32
6 64
7 128
8 256
9 512
10  1,024
11  2,048
12  4,096
13  8,192
14  16,384
15  32,768
16  65,536
17  131,072
18  262,144
19  524,288
20  1,048,576
21  2,097,152
22  4,194,304
23  8,388,608
24  16,777,216
25  33,554,432
26  67,108,864
27  134,217,728
28  268,435,456
29  536,870,912
30  1,073,741,824
31  2,147,483,648
32  4,294,967,296
33  8,589,934,592
34  17,179,869,184
35  34,359,738,368
36  68,719,476,736
37  137,438,953,472
38  274,877,906,944
39  549,755,813,888
40  1,099,511,627,776
41  2,199,023,255,552
42  4,398,046,511,104
43  8,796,093,022,208
44  17,592,186,044,416
45  35,184,372,088,832
46  70,368,744,177,664
47  140,737,488,355,328
48  281,474,976,710,656
49  562,949,953,421,312
50  1,125,899,906,842,624
51  2,251,799,813,685,248
52  4,503,599,627,370,496
53  9,007,199,254,740,992
54  18,014,398,509,481,984
55  36,028,797,018,963,968
56  72,057,594,037,927,936
57  144,115,188,075,855,872
58  288,230,376,151,711,744
59  576,460,752,303,423,488
60  1,152,921,504,606,846,976
61  2,305,843,009,213,693,952
62  4,611,686,018,427,387,904
63  9,223,372,036,854,775,808
64  18,446,744,073,709,551,616
65  36,893,488,147,419,103,232
66  73,786,976,294,838,206,464
67  147,573,952,589,676,412,928
68  295,147,905,179,352,825,856
69  590,295,810,358,705,651,712
70  1,180,591,620,717,411,303,424
71  2,361,183,241,434,822,606,848
72  4,722,366,482,869,645,213,696
73  9,444,732,965,739,290,427,392
74  18,889,465,931,478,580,854,784
75  37,778,931,862,957,161,709,568
76  75,557,863,725,914,323,419,136
77  151,115,727,451,828,646,838,272
78  302,231,454,903,657,293,676,544
79  604,462,909,807,314,587,353,088
80  1,208,925,819,614,629,174,706,176
81  2,417,851,639,229,258,349,412,352
82  4,835,703,278,458,516,698,824,704
83  9,671,406,556,917,033,397,649,408
84  19,342,813,113,834,066,795,298,816
85  38,685,626,227,668,133,590,597,632
86  77,371,252,455,336,267,181,195,264
87  154,742,504,910,672,534,362,390,528
88  309,485,009,821,345,068,724,781,056
89  618,970,019,642,690,137,449,562,112
90  1,237,940,039,285,380,274,899,124,224
91  2,475,880,078,570,760,549,798,248,448
92  4,951,760,157,141,521,099,596,496,896
93  9,903,520,314,283,042,199,192,993,792
94  19,807,040,628,566,084,398,385,987,584
95  39,614,081,257,132,168,796,771,975,168
96  79,228,162,514,264,337,593,543,950,336
97  158,456,325,028,528,675,187,087,900,672
98  316,912,650,057,057,350,374,175,801,344
99  633,825,300,114,114,700,748,351,602,688
100 1,267,650,600,228,229,401,496,703,205,376
===============================================================================



elixir bitstring, binary
========================
1. anything between << and >> is a bitstring e.g <<1>>, <<1,890>>
2. the syntaxes are <<a>> or <<a::b>> or <<a::size(b)>> or <<a::utf8>>. 'a' is an integer (base 10) representing the byte and 'a' represents how many bits make up the byte.
3. if you use <<a>>, size eight is assumed.
4. if size divided by 8 is whole number, then it is called a binary.
  <<1>> is binary because 8 (default size) divided by 8 is 1
  <<1::4>> is not a binary (only a bitstring) because 4 divided by 8 is 1/2
5. If <<a>> (a binary - remember size 8 by default) is utf8 encoded, then it is called string
    Thus bitstring > binary > string.
    Note: utf8 encoding is a binary encoding scheme which takes a unicode code point and uses special formular for its encoding (the x's are 1s and 0s)
      scheme 1: 0xxxxxxxx (thus <<1>> is 00000001 and <<127>> is 01111111)
      scheme 2: 110xxxxx 10xxxxxx (thus <<128>> is 11000010 10000000)
      scheme 3:
      scheme 4:

      HINT: how can you get the binary encoding scheme of a utf8 string?:
      iex> to_utf8_scheme = fn string -> string |> :binary.bin_to_list |> Enum.map(&Integer.to_string(&1, 2)) end
      iex> to_utf8_scheme.(<<128::utf8>>)
      ["11000010", "10000000"]
      iex> to_ut8_scheme.(<<6000::utf8>>)
      ["11100001", "10011101", "10110000"]


     Thus when elixir sees <<0>> to <<127>> (ascii characters), it chooses scheme 1 by default and thus knows it is a utf8 encoded string. But when it sees <<128>>, it does not automatically choose scheme 2 unless you tell it to by specifying <<128::utf8>. Thus <<128>> is not a string but <<128::utf8>> is.

==============================================================================

cypress on wsl
==============
sudo apt install libgconf2-4
==============================================================================


clear linux ram memory cache and buffer
=======
1. Clear PageCache only.
# sudo sync; sudo echo 1 | sudo tee -a /proc/sys/vm/drop_caches

2. Clear dentries and inodes.
# sudo sync; sudo echo 2 | sudo -a /proc/sys/vm/drop_caches

3. Clear PageCache, dentries and inodes.
# sudo sync; sudo echo 3 | sudo tee -a /proc/sys/vm/drop_caches

clear swap space
========
# sudo swapoff -a && sudo swapon -a


==============================================================================

javascript get a random number between min and max
========
Math.floor(min + Math.random() * (max - min + 1))

==============================================================================
workflow for clean git history
=====
1. pull from master
$ git pull origin master

2. create new feature branch
$ git checkout -b branch-name

3. after several commits, rebase
$ git rebase -i commit_sha_of_where_master_stopped_on_my_local_machine

4.
$ git push --force origin branch-name
$ git checkout master
$ git pull origin master
$ git checkout branch-name
$ git rebase master # handle any conflicts
$ git push --force origin branch-name
$ git checkout master
$ git merge branch-name
$ git push origin master
==============================================================================
watchman
========
watchman watch-list
watchman watch-del-all
==============================================================================

backup heroku database
======================
heroku pg:backups:capture
heroku pg:backups:download

==============================================================================
mocha cypress test
==================
.should('equal', value)
.should('include', value)
.should('contain', value)
.should('have.property', value) // dom property e. ('have.value', value) ('have.css', 'postion', 'static')
expect(value).to.eq(value)
expect(value).to.be.true
expect(value).to.be.null

==============================================================================
How do you add swap to an EC2 instance?
==============================

https://stackoverflow.com/questions/17173972/how-do-you-add-swap-to-an-ec2-instance/22247782#22247782


==============================================================================
stop neovim recording @a
======
in normal mode, type q


==============================================================================
react lazy initialiaze useRef
===========================

  const updateResumeFnDebounced = useRef<null | UpdateResumeFn>(null);

  function getUpdateFn() {
    if (updateResumeFnDebounced.current === null) {
      updateResumeFnDebounced.current = lodashDebounce(
        updateResumeFn,
        debounceTime,
      );
    }

    return updateResumeFnDebounced.current;
  }
----so when you need it---, just call the function

==============================================================================
react programatically set input values:
===========
const nodePrototype = Object.getPrototypeOf(node);
const nodeValue = Object.getOwnPropertyDescriptor(nodePrototype, 'value');
nodeValue.set.call(node, 'newValue');
const event = new Event('change', {bubbles: true, cancelable: true});
node.dispatch(event);

==============================================================================
pylint error prefixes e.g E1121
================
(F)atal (something prevented pylint from running normally)
(E)rror (serious bug)
(W)arning (not so serious issue)
(I)nfo (errors like being unable to parse a # pylint: disable comment)
(C)onvention (coding style)
(R)efactoring (code that could be written in a clearer or more Pythonic way)

==============================================================================
install python asdf
--------------------
install following dependencies:
sudo apt install -y libbz2-dev libssl-dev libsqlite3-dev libreadline-dev

==============================================================================

python gunicor wsgi
=====
gunicorn django_app_name.wsgi:application --bind 0.0.0.0:8000

==============================================================================
ale python django stubs mypy not working
export PYTHONPATH=$PYTHONPATH:$PWD

or

or place your code on python path by creating a setup.py file and:
pip install -e .
==============================================================================

python property based testing and contracts
-------------------------------------
hypothesis.works
github.com/deadpixi/contracts

==============================================================================

Analytical Web Apps for Python & R. No JavaScript Required. https://plot.ly/dash
https://github.com/plotly/dash

Grafana allows you to query, visualize, alert on and understand your metrics
https://grafana.com/grafana/

==============================================================================
https://lucasfcosta.com/2019/02/10/terminal-guide-2019.html
How I'm still not using GUIs in 2019: A guide to the terminal

==============================================================================
How to automount my Windows partition at boot?
https://askubuntu.com/questions/123234/how-to-automount-my-windows-partition-at-boot

The visual way
(if you are using version Ubuntu 12.10 Quantal Quetza or higher)

Make sure the drive/partition you would like to attach is attached to your system and is turned on.

This guide is referenced from here.

Click on the "Dash" icon on your Unity taskbar (Ubuntu icon) and enter:

disks
Click on "Disks" to open up the program.

Once opened, on its main window, "Disks" graphically shows you your current partition layout.

Now simply choose the NTFS partition that you want to automatically mount on boot, then click on the small gears icon slightly below it. From the menu choose:

‘Edit Mount Options…’
From the next window that is shown, move the slider button to the left, next to the ‘Automatic Mount Options’ label, to gain access to the settings.

Keep the check-marked option ‘Mount at startup’.

Select/Fill the next four options if you wish. "Display Name" is a handy visual aid in Nautilus (file manager).

If you wish to have the drive as read-only

Add...
ro

...to the end of the field that says "nosuid,nodev,nofail,x-gvfs-show" (without a space).


Once done, click on the ‘OK’ button at the bottom. When asked, enter your administrative password.

If you have more than one NTFS partition, then follow the same steps for each one individually.

Restart your computer and enjoy!
--------------THE END---------------------------------------------------------






































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































https://tvseries.cc



















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































\





































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Public IP: 18.197.62.249
User name: ubuntu



-----------------------





 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/ibnis.com/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/ibnis.com/privkey.pem
   Your cert will expire on 2019-10-25. To obtain a new or tweaked
   version of this certificate in the future, simply run certbot
   again. To non-interactively renew *all* of your certificates, run
   "certbot renew"
 - Your account credentials have been saved in your Certbot
   configuration directory at /etc/letsencrypt. You should make a
   secure backup of this folder now. This configuration directory will
   also contain certificates and private keys obtained by Certbot so
   making regular backups of this folder is ideal.
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le

ubuntu@ip-172-31-26-9:~$ ll /etc/ss
